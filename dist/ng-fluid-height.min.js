/*! 
 * ng-fluid-height v1.0.0
 * https://github.com/deopard/ng-fluid-height#readme
 * Copyright (c) 2015 Tom Kim
 * License: MIT
 */
!function(){function a(a,b,c){function d(d,e,f,g){var h=angular.element(a);d.getWindowDimensions=function(){return{h:h.height(),w:h.width()}},h.bind("resize",function(){d.$apply()}),d.$watch(d.getWindowDimensions,function(a,d){function g(){var a=c.getFluidHeight(f.fluidHeightFluid);e.css("max-height",a+"px")}g(),b(g,100)},!0),d.$on("fluid-height-changed",function(){function a(){var a=c.getFluidHeight(f.fluidHeightFluid);e.css("max-height",a+"px")}a(),b(a,100)}),c.registerFluid(f.fluidHeightFluid,d)}var e={restrict:"A",link:d};return e}angular.module("remember").directive("fluidHeightFluid",a),a.$inject=["$window","$timeout","FluidHeightManager"]}(),function(){function a(a,b,c){function d(a,b,d,e){var f=d.fluidHeightStatic,g=d.fluidHeightStaticKey,h=parseInt(d.fluidHeightStaticHeight);h&&h.toString()==d.fluidHeightStaticHeight||(h=b.outerHeight(),a.$watch(function(){return b.outerHeight()},function(b){c.changed(f,g,a.fluidHeightStaticShown?b:0)})),c.registerStatic(f,g,a.fluidHeightStaticShown?h:0),a.$watch(function(){return!!a.fluidHeightStaticShown},function(a){c.changed(f,g,a?h:0)})}var e={restrict:"A",scope:{fluidHeightStaticShown:"="},link:d};return e}angular.module("remember").directive("fluidHeightStatic",a),a.$inject=["$window","$timeout","FluidHeightManager"]}(),function(){function a(a){function b(a,b){g[a]=b}function c(a,b,c){_.isUndefined(f[a])&&(f[a]={}),f[a][b]=c}function d(a,b,c){f[a][b]=c,_.isUndefined(g[a])||g[a].$emit("fluid-height-changed")}function e(a){var b=0;return _.each(f[a],function(a){b+=a}),_.each(f.common,function(a){b+=a}),$(window).height()-b-10}var f=(angular.element(a),{}),g={};this.registerFluid=b,this.registerStatic=c,this.getFluidHeight=e,this.changed=d}angular.module("remember").service("FluidHeightManager",a),a.$inject=["$window"]}();