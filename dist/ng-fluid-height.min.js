/*! 
 * ng-fluid-height v1.0.1
 * https://github.com/deopard/ng-fluid-height#readme
 * Copyright (c) 2016 Tom Kim
 * License: MIT
 */
!function(){angular.module("deopard.ngFluidHeight",[])}(),function(){function a(a,b){function c(c,d,e,f){function g(){return{h:i[0].innerHeight,w:i[0].innerHeight}}function h(){var a=b.getFluidHeight(c.fluidHeightFluid);d.css("max-height",a+"px")}var i=angular.element(a);i.bind("resize",function(){c.$apply()}),c.$watch(g,h,!0),c.$on("fluid-height-changed",h),b.registerFluid(c.fluidHeightFluid,c)}var d={restrict:"A",scope:{fluidHeightFluid:"="},link:c};return d}angular.module("deopard.ngFluidHeight").directive("fluidHeightFluid",a),a.$inject=["$window","FluidHeightManager"]}(),function(){function a(a){function b(b,c,d,e){var f=b.fluidHeightStatic,g=b.fluidHeightStaticKey,h=b.fluidHeightStaticHeight;h||(h=c[0].offsetHeight,b.$watch(function(){return c[0].offsetHeight},function(c){a.changed(f,g,b.fluidHeightStaticShown===!1?0:c)})),a.registerStatic(f,g,b.fluidHeightStaticShown===!1?0:h),b.$watch(function(){return b.fluidHeightStaticShown!==!1},function(b){a.changed(f,g,b?h:0)})}var c={restrict:"A",scope:{fluidHeightStatic:"=",fluidHeightStaticKey:"=",fluidHeightStaticHeight:"=?",fluidHeightStaticShown:"=?"},link:b};return c}angular.module("deopard.ngFluidHeight").directive("fluidHeightStatic",a),a.$inject=["FluidHeightManager"]}(),function(){function a(a){function b(a,b){h[a]=b}function c(a,b,c){angular.isUndefined(g[a])&&(g[a]={}),g[a][b]=c}function d(a){var b=0;return angular.forEach(g[a],function(a){b+=a}),angular.forEach(g.common,function(a){b+=a}),f[0].innerHeight-b}function e(a,b,c){g[a][b]=c,angular.isUndefined(h[a])||h[a].$emit("fluid-height-changed")}var f=angular.element(a),g={},h={};this.registerFluid=b,this.registerStatic=c,this.getFluidHeight=d,this.changed=e}angular.module("deopard.ngFluidHeight").service("FluidHeightManager",a),a.$inject=["$window"]}();